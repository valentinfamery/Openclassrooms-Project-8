-- MySQL Script generated by MySQL Workbench
-- Mon Mar 13 22:17:12 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Address` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Address` (
  `idAddress` INT NOT NULL,
  `street` VARCHAR(200) NULL,
  `additionalAddress` VARCHAR(200) NULL,
  `postalCode` VARCHAR(200) NULL,
  `city` VARCHAR(200) NULL,
  PRIMARY KEY (`idAddress`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`PointOfSale`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`PointOfSale` ;

CREATE TABLE IF NOT EXISTS `mydb`.`PointOfSale` (
  `idPointOfSale` INT NOT NULL,
  `namePointOfSale` VARCHAR(200) NULL,
  `siret` VARCHAR(200) NULL,
  `idAddress` INT NOT NULL,
  `idUserManager` INT NULL,
  PRIMARY KEY (`idPointOfSale`),
  INDEX `fk_PointOfSale_Address_idx` (`idAddress` ASC) VISIBLE,
  INDEX `fk_PointOfSale_User1_idx` (`idUserManager` ASC) VISIBLE,
  CONSTRAINT `fk_PointOfSale_Address`
    FOREIGN KEY (`idAddress`)
    REFERENCES `mydb`.`Address` (`idAddress`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PointOfSale_User1`
    FOREIGN KEY (`idUserManager`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`User` ;

CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `idUser` INT NOT NULL,
  `lastName` VARCHAR(200) NULL,
  `firstName` VARCHAR(200) NULL,
  `dateCreateAccount` DATE NULL,
  `phoneNumber` VARCHAR(200) NULL,
  `username` VARCHAR(200) NULL,
  `password` VARCHAR(200) NULL,
  `email` VARCHAR(200) NULL,
  `idAddress` INT NOT NULL,
  `idPointOfSale` INT NOT NULL,
  `Type` VARCHAR(150) NULL,
  PRIMARY KEY (`idUser`),
  INDEX `fk_User_Address1_idx` (`idAddress` ASC) VISIBLE,
  INDEX `fk_User_PointOfSale1_idx` (`idPointOfSale` ASC) VISIBLE,
  CONSTRAINT `fk_User_Address1`
    FOREIGN KEY (`idAddress`)
    REFERENCES `mydb`.`Address` (`idAddress`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_PointOfSale1`
    FOREIGN KEY (`idPointOfSale`)
    REFERENCES `mydb`.`PointOfSale` (`idPointOfSale`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Order` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Order` (
  `idOrder` INT NOT NULL AUTO_INCREMENT,
  `dateOrder` DATETIME NOT NULL DEFAULT '2022-01-01 00:00:00',
  `dateDelivery` DATETIME NOT NULL DEFAULT '2022-01-01 00:00:00',
  `statusOrder` VARCHAR(200) NOT NULL,
  `payMethod` VARCHAR(200) NULL,
  `amountHT` FLOAT NULL,
  `amountTTC` FLOAT NULL,
  `idUserClient` INT NOT NULL,
  `idUserPizzaiolo` INT NOT NULL,
  `idUserDeliverMan` INT NOT NULL,
  PRIMARY KEY (`idOrder`),
  INDEX `fk_Order_User1_idx` (`idUserClient` ASC) VISIBLE,
  INDEX `fk_Order_User2_idx` (`idUserPizzaiolo` ASC) VISIBLE,
  INDEX `fk_Order_User3_idx` (`idUserDeliverMan` ASC) VISIBLE,
  CONSTRAINT `fk_Order_User1`
    FOREIGN KEY (`idUserClient`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Order_User2`
    FOREIGN KEY (`idUserPizzaiolo`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Order_User3`
    FOREIGN KEY (`idUserDeliverMan`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Product` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Product` (
  `idProduct` INT NOT NULL,
  `nameProduct` VARCHAR(200) NULL,
  `size` VARCHAR(200) NULL,
  `composition` VARCHAR(200) NULL,
  `category` VARCHAR(200) NULL,
  `unitPriceHT` FLOAT NULL,
  `unitPriceTTC` FLOAT NULL,
  `recipe` VARCHAR(20000) NULL,
  PRIMARY KEY (`idProduct`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Ingredient`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Ingredient` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Ingredient` (
  `idIngredient` INT NOT NULL,
  `name` VARCHAR(200) NULL,
  `idProduct` INT NOT NULL,
  PRIMARY KEY (`idIngredient`),
  INDEX `fk_Ingredient_Product1_idx` (`idProduct` ASC) VISIBLE,
  CONSTRAINT `fk_Ingredient_Product1`
    FOREIGN KEY (`idProduct`)
    REFERENCES `mydb`.`Product` (`idProduct`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Stock`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Stock` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Stock` (
  `idStock` INT NOT NULL,
  `datePurchase` DATE NULL,
  `dateExpiration` DATE NULL,
  `idPointOfSale` INT NOT NULL,
  PRIMARY KEY (`idStock`),
  INDEX `fk_Stock_PointOfSale1_idx` (`idPointOfSale` ASC) VISIBLE,
  CONSTRAINT `fk_Stock_PointOfSale1`
    FOREIGN KEY (`idPointOfSale`)
    REFERENCES `mydb`.`PointOfSale` (`idPointOfSale`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`assoc_Order_Product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`assoc_Order_Product` ;

CREATE TABLE IF NOT EXISTS `mydb`.`assoc_Order_Product` (
  `Order_idOrder` INT NOT NULL,
  `Product_idProduct` INT NOT NULL,
  `quantity` INT NULL,
  INDEX `fk_assoc_Order_Product_Order1_idx` (`Order_idOrder` ASC) VISIBLE,
  INDEX `fk_assoc_Order_Product_Product1_idx` (`Product_idProduct` ASC) VISIBLE,
  CONSTRAINT `fk_assoc_Order_Product_Order1`
    FOREIGN KEY (`Order_idOrder`)
    REFERENCES `mydb`.`Order` (`idOrder`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_assoc_Order_Product_Product1`
    FOREIGN KEY (`Product_idProduct`)
    REFERENCES `mydb`.`Product` (`idProduct`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`assoc_Ingredient_Stock`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`assoc_Ingredient_Stock` ;

CREATE TABLE IF NOT EXISTS `mydb`.`assoc_Ingredient_Stock` (
  `Stock_idStock` INT NOT NULL,
  `Ingredient_idIngredient` INT NOT NULL,
  `quantityRemaining` INT NULL,
  `unit` VARCHAR(200) NULL,
  INDEX `fk_assoc_Ingredient_Stock_Stock1_idx` (`Stock_idStock` ASC) VISIBLE,
  INDEX `fk_assoc_Ingredient_Stock_Ingredient1_idx` (`Ingredient_idIngredient` ASC) VISIBLE,
  CONSTRAINT `fk_assoc_Ingredient_Stock_Stock1`
    FOREIGN KEY (`Stock_idStock`)
    REFERENCES `mydb`.`Stock` (`idStock`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_assoc_Ingredient_Stock_Ingredient1`
    FOREIGN KEY (`Ingredient_idIngredient`)
    REFERENCES `mydb`.`Ingredient` (`idIngredient`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

INSERT INTO `mydb`.`Address` (idAddress, street, additionalAddress, postalCode, city) VALUES
(1, 'Rue du Faubourg Saint-Honoré', NULL, '75008', 'Paris'),
(2, 'Avenue des Champs-Élysées', NULL, '75008', 'Paris'),
(3, 'Rue de la Paix', NULL, '75002', 'Paris');

INSERT INTO `mydb`.`PointOfSale` (idPointOfSale, namePointOfSale, siret, idAddress) VALUES
(1, 'Pizza shop 1', '12345678901234', 1),
(2, 'Pizza shop 2', '12345678901235', 2),
(3, 'Pizza shop 3', '12345678901236', 3);

INSERT INTO `mydb`.`User` (idUser, lastName, firstName, dateCreateAccount, phoneNumber, username, password, email, idAddress, idPointOfSale) VALUES
(1, 'Dupont', 'Pierre', '2022-01-01', '0123456789', 'pdupont', 'password', 'pdupont@mail.com', 1, 1),
(2, 'Martin', 'Julie', '2022-01-01', '0123456789', 'jmartin', 'password', 'jmartin@mail.com', 2, 2),
(3, 'Leclerc', 'Lucie', '2022-01-01', '0123456789', 'lleclerc', 'password', 'lleclerc@mail.com', 3, 1),
(4, 'Dubois', 'Thomas', '2022-01-01', '0123456789', 'tdubois', 'password', 'tdubois@mail.com', 1, 3);

update `mydb`.`PointOfSale` set `idUserManager` = 1 where idPointOfSale = 1;
update `mydb`.`PointOfSale` set `idUserManager` = 1 where idPointOfSale = 2;
update `mydb`.`PointOfSale` set `idUserManager` = 1 where idPointOfSale = 3;

INSERT INTO `mydb`.`Product` (idProduct, nameProduct, size, composition, category, unitPriceHT, unitPriceTTC, recipe) VALUES
(1, 'Margherita', 'Large', 'Tomato sauce, mozzarella cheese, fresh basil', 'Pizza', 10.00, 12.00, '1. Preheat the oven to 450°F (230°C).\n2. Roll out the pizza dough to the desired size.\n3. Spread tomato sauce over the dough, leaving a little space around the edges for the crust.\n4. Add the mozzarella cheese on top of the sauce.\n5. Bake in the preheated oven for 10-12 minutes or until the crust is golden brown and the cheese is melted and bubbly.\n6. Sprinkle fresh basil over the top and serve hot.'),
(2, 'Pepperoni', 'Large', 'Tomato sauce, mozzarella cheese, pepperoni', 'Pizza', 12.00, 14.00, '1. Preheat the oven to 450°F (230°C).\n2. Roll out the pizza dough to the desired size.\n3. Spread tomato sauce over the dough, leaving a little space around the edges for the crust.\n4. Add the mozzarella cheese on top of the sauce.\n5. Add pepperoni slices on top of the cheese.\n6. Bake in the preheated oven for 10-12 minutes or until the crust is golden brown and the cheese is melted and bubbly.\n7. Serve hot.'),
(3, 'Vegetarian', 'Large', 'Tomato sauce, mozzarella cheese, mixed vegetables', 'Pizza', 11.00, 13.00, '1. Preheat the oven to 450°F (230°C).\n2. Roll out the pizza dough to the desired size.\n3. Spread tomato sauce over the dough, leaving a little space around the edges for the crust.\n4. Add the mozzarella cheese on top of the sauce.\n5. Add mixed vegetables on top of the cheese.\n6. Bake in the preheated oven for 10-12 minutes or until the crust is golden brown and the cheese is melted and bubbly.\n7. Serve hot.');

INSERT INTO `mydb`.`Ingredient` (idIngredient, name, idProduct) VALUES
(1, 'Pizza dough', 1),
(2, 'Tomato sauce', 1),
(3, 'Mozzarella cheese', 1),
(4, 'Fresh basil', 1),
(5, 'Pizza dough', 2),
(6, 'Tomato sauce', 2),
(7, 'Mozzarella cheese', 2),
(8, 'Pepperoni slices', 2),
(9, 'Pizza dough', 3),
(10, 'Tomato sauce', 3),
(11, 'Mozzarella cheese', 3),
(12, 'Mixed vegetables', 3);

INSERT INTO `mydb`.`Stock` VALUES (1, '2022-01-15', '2022-02-15', 2);

INSERT INTO `mydb`.`Order` (`dateOrder`, `dateDelivery`, `statusOrder`, `payMethod`, `amountHT`, `amountTTC`, `idUserClient`, `idUserPizzaiolo`, `idUserDeliverMan`)
VALUES 
('2022-01-10 18:30:00', '2022-01-10 19:15:00', 'DELIVERED', 'CREDIT CARD', 15.5, 18.6, 1, 2, 3),
('2022-02-14 20:00:00', '2022-02-14 21:00:00', 'IN_PROGRESS', 'CASH', 22.3, 26.8, 1, 2, 3);

INSERT INTO `mydb`.`assoc_Ingredient_Stock` VALUES (1,1,5,'kg'),(1,2,5,'kg'),(1,3,5,'kg'),(1,4,5,'kg'),(1,5,5,'kg'),(1,6,5,'kg'),(1,7,5,'kg'),(1,8,5,'kg'),(1,9,5,'kg'),(1,10,5,'kg'),(1,11,5,'kg'),(1,12,5,'kg');
INSERT INTO `mydb`.`assoc_Order_Product` VALUES (1,1,4),(2,2,3);
